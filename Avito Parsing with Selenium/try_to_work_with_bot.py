
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext
import subprocess  # –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö Python-—Å–∫—Ä–∏–ø—Ç–æ–≤

# üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '8087040319:AAEVnet_HuhgndKneYaTgsH0HOWFPB1FdOU'

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def start(update: Update, context: CallbackContext):
    # –û–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ /start
    description = (
        "–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.\n\n"
        "–°–µ–π—á–∞—Å –æ–Ω —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ 1–∫ –∫–≤–∞—Ä—Ç–∏—Ä –≤ –ü–µ—Ä–º–∏ –∏ –≤—ã–≤–æ–¥–∏—Ç—å –ø–µ—Ä–≤—ã–µ 50 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n\n"
    )

    keyboard = [
        [InlineKeyboardButton("–ü–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä –≤ –ü–µ—Ä–º–∏", callback_data='menu_1')],
        #[InlineKeyboardButton("–ú–µ–Ω—é 2", callback_data='menu_2')],
        #[InlineKeyboardButton("–ú–µ–Ω—é 3", callback_data='menu_3')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:  # –î–ª—è —Å–ª—É—á–∞—è –∫–æ–º–∞–Ω–¥—ã /start
        update.message.reply_text(description, reply_markup=reply_markup)  # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    elif update.callback_query:  # –î–ª—è —Å–ª—É—á–∞—è callback_query
        update.callback_query.edit_message_text(description, reply_markup=reply_markup)  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ


# –ú–µ–Ω—é 1
def menu_1(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ 1–∫ –∫–≤–∞—Ä—Ç–∏—Ä –≤ –ü–µ—Ä–º–∏", callback_data='run_try3')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.callback_query.edit_message_text('–ú–µ–Ω—é 1. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=reply_markup)

# –ú–µ–Ω—é 2
def menu_2(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("–°–∫—Ä–∏–ø—Ç 2", callback_data='run_script2')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.callback_query.edit_message_text('–ú–µ–Ω—é 2. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=reply_markup)

# –ú–µ–Ω—é 3
def menu_3(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("–°–∫—Ä–∏–ø—Ç 3", callback_data='run_script3')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.callback_query.edit_message_text('–ú–µ–Ω—é 3. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()

    if query.data == 'menu_1':
        menu_1(update, context)
    elif query.data == 'menu_2':
        menu_2(update, context)
    elif query.data == 'menu_3':
        menu_3(update, context)
    elif query.data == 'back_to_main':
        start(update, context)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif query.data == 'run_try3':
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç 1
        subprocess.run(['python', 'try3.py'])
        query.edit_message_text(text="–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!")
    elif query.data == 'run_script2':
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç 2
        subprocess.run(['python', 'script2.py'])
        query.edit_message_text(text="–°–∫—Ä–∏–ø—Ç 2 –∑–∞–ø—É—â–µ–Ω!")
    elif query.data == 'run_script3':
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç 3
        subprocess.run(['python', 'script3.py'])
        query.edit_message_text(text="–°–∫—Ä–∏–ø—Ç 3 –∑–∞–ø—É—â–µ–Ω!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler('start', start))  # –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    dp.add_handler(CallbackQueryHandler(button_handler))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
